# Generated by Django 2.1.2 on 2018-10-18 17:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('submission', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('review', '0001_initial'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='log',
            name='proposal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proposal_log', to='submission.Proposal'),
        ),
        migrations.AddField(
            model_name='log',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='indexassignment',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Book'),
        ),
        migrations.AddField(
            model_name='indexassignment',
            name='files',
            field=models.ManyToManyField(blank=True, null=True, to='core.File'),
        ),
        migrations.AddField(
            model_name='indexassignment',
            name='index_files',
            field=models.ManyToManyField(blank=True, null=True, related_name='index_files', to='core.File'),
        ),
        migrations.AddField(
            model_name='indexassignment',
            name='indexer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indexer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='indexassignment',
            name='requestor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='index_requestor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='identifier',
            name='book',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Book'),
        ),
        migrations.AddField(
            model_name='identifier',
            name='digital_format',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='digital_format', to='core.Format'),
        ),
        migrations.AddField(
            model_name='identifier',
            name='physical_format',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.PhysicalFormat'),
        ),
        migrations.AddField(
            model_name='format',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Book'),
        ),
        migrations.AddField(
            model_name='format',
            name='file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.File'),
        ),
        migrations.AddField(
            model_name='fileversion',
            name='file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.File'),
        ),
        migrations.AddField(
            model_name='fileversion',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='file',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='emaillog',
            name='attachment',
            field=models.ManyToManyField(blank=True, null=True, related_name='email_attachment', to='core.File'),
        ),
        migrations.AddField(
            model_name='emaillog',
            name='book',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Book'),
        ),
        migrations.AddField(
            model_name='emaillog',
            name='proposal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='submission.Proposal'),
        ),
        migrations.AddField(
            model_name='editorialreviewassignment',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Book'),
        ),
        migrations.AddField(
            model_name='editorialreviewassignment',
            name='editorial_board',
            field=models.ManyToManyField(blank=True, null=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='editorialreviewassignment',
            name='editorial_board_files',
            field=models.ManyToManyField(blank=True, null=True, related_name='editorial_board_files', to='core.File'),
        ),
        migrations.AddField(
            model_name='editorialreviewassignment',
            name='editorial_board_results',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eb_review_form_results', to='review.FormResult'),
        ),
        migrations.AddField(
            model_name='editorialreviewassignment',
            name='editorial_board_review_form',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eb_review_form', to='review.Form'),
        ),
        migrations.AddField(
            model_name='editorialreviewassignment',
            name='management_editor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='management_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='editorialreviewassignment',
            name='publication_committee_files',
            field=models.ManyToManyField(blank=True, null=True, related_name='publication_committee_files', to='core.File'),
        ),
        migrations.AddField(
            model_name='editorialreviewassignment',
            name='publication_committee_results',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pc_review_form_results', to='review.FormResult'),
        ),
        migrations.AddField(
            model_name='editorialreviewassignment',
            name='publication_committee_review_form',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pc_review_form', to='review.Form'),
        ),
        migrations.AddField(
            model_name='copyeditassignment',
            name='author_files',
            field=models.ManyToManyField(blank=True, null=True, related_name='author_copyedit_files', to='core.File'),
        ),
        migrations.AddField(
            model_name='copyeditassignment',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Book'),
        ),
        migrations.AddField(
            model_name='copyeditassignment',
            name='copyedit_files',
            field=models.ManyToManyField(blank=True, null=True, related_name='copyedit_files', to='core.File'),
        ),
        migrations.AddField(
            model_name='copyeditassignment',
            name='copyeditor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='copyeditor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='copyeditassignment',
            name='files',
            field=models.ManyToManyField(blank=True, null=True, related_name='cp_assigned_files', to='core.File'),
        ),
        migrations.AddField(
            model_name='copyeditassignment',
            name='requestor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='copyedit_requestor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contract',
            name='author_file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author_file', to='core.File'),
        ),
        migrations.AddField(
            model_name='contract',
            name='editor_file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='editor_file', to='core.File'),
        ),
        migrations.AddField(
            model_name='chapterformat',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Book'),
        ),
        migrations.AddField(
            model_name='chapterformat',
            name='chapter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='format_chapter', to='core.Chapter'),
        ),
        migrations.AddField(
            model_name='chapterformat',
            name='file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.File'),
        ),
        migrations.AddField(
            model_name='chapterauthor',
            name='chapter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Chapter'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='authors',
            field=models.ManyToManyField(blank=True, null=True, to='core.Author'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Book'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='disciplines',
            field=models.ManyToManyField(blank=True, null=True, to='core.Subject'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='formats',
            field=models.ManyToManyField(blank=True, null=True, related_name='formats', to='core.ChapterFormat'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='keywords',
            field=models.ManyToManyField(blank=True, null=True, to='core.Keyword'),
        ),
        migrations.AddField(
            model_name='book',
            name='author',
            field=models.ManyToManyField(blank=True, null=True, to='core.Author'),
        ),
        migrations.AddField(
            model_name='book',
            name='book_editors',
            field=models.ManyToManyField(blank=True, null=True, related_name='book_editors', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='book',
            name='contract',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contract_of_book', to='core.Contract'),
        ),
        migrations.AddField(
            model_name='book',
            name='editor',
            field=models.ManyToManyField(blank=True, null=True, to='core.Editor'),
        ),
        migrations.AddField(
            model_name='book',
            name='editorial_review_assignments',
            field=models.ManyToManyField(blank=True, null=True, related_name='editorial_review', to='core.EditorialReviewAssignment'),
        ),
        migrations.AddField(
            model_name='book',
            name='external_review_files',
            field=models.ManyToManyField(blank=True, null=True, related_name='external_review_files', to='core.File'),
        ),
        migrations.AddField(
            model_name='book',
            name='files',
            field=models.ManyToManyField(blank=True, null=True, to='core.File'),
        ),
        migrations.AddField(
            model_name='book',
            name='internal_review_files',
            field=models.ManyToManyField(blank=True, null=True, related_name='internal_review_files', to='core.File'),
        ),
        migrations.AddField(
            model_name='book',
            name='keywords',
            field=models.ManyToManyField(blank=True, null=True, to='core.Keyword'),
        ),
        migrations.AddField(
            model_name='book',
            name='languages',
            field=models.ManyToManyField(blank=True, null=True, to='core.Language'),
        ),
        migrations.AddField(
            model_name='book',
            name='license',
            field=models.ForeignKey(blank=True, help_text='The license you recommend for this work.', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.License'),
        ),
        migrations.AddField(
            model_name='book',
            name='misc_files',
            field=models.ManyToManyField(blank=True, null=True, related_name='misc_files', to='core.File'),
        ),
        migrations.AddField(
            model_name='book',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='book',
            name='press_editors',
            field=models.ManyToManyField(blank=True, null=True, related_name='press_editors', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='book',
            name='production_editors',
            field=models.ManyToManyField(blank=True, null=True, related_name='production_editors', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='book',
            name='production_files',
            field=models.ManyToManyField(blank=True, null=True, related_name='production_files', to='core.File'),
        ),
        migrations.AddField(
            model_name='book',
            name='proposal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='submission.Proposal'),
        ),
        migrations.AddField(
            model_name='book',
            name='read_only_users',
            field=models.ManyToManyField(blank=True, null=True, related_name='read_only_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='book',
            name='review_assignments',
            field=models.ManyToManyField(blank=True, null=True, related_name='review', to='core.ReviewAssignment'),
        ),
        migrations.AddField(
            model_name='book',
            name='review_form',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='review.Form'),
        ),
        migrations.AddField(
            model_name='book',
            name='series',
            field=models.ForeignKey(blank=True, help_text='If you are submitting this work to an existing Series please select it.', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Series'),
        ),
        migrations.AddField(
            model_name='book',
            name='stage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Stage'),
        ),
        migrations.AddField(
            model_name='book',
            name='subject',
            field=models.ManyToManyField(blank=True, null=True, to='core.Subject'),
        ),
        migrations.AlterUniqueTogether(
            name='reviewround',
            unique_together={('book', 'round_number')},
        ),
        migrations.AlterUniqueTogether(
            name='reviewassignment',
            unique_together={('book', 'user', 'review_type', 'review_round')},
        ),
    ]
