# Generated by Django 2.1.2 on 2018-10-18 17:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('review', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoryProposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(default=1)),
                ('title', models.CharField(max_length=255, verbose_name='Book Title')),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True)),
                ('author', models.CharField(max_length=255, verbose_name='Submitting author/editor')),
                ('date_submitted', models.DateTimeField(auto_now_add=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('date_review_started', models.DateTimeField(blank=True, null=True)),
                ('revision_due_date', models.DateTimeField(blank=True, null=True)),
                ('date_accepted', models.DateTimeField(blank=True, null=True)),
                ('date_edited', models.DateTimeField(blank=True, null=True)),
                ('book_type', models.CharField(blank=True, choices=[('monograph', 'Monograph'), ('edited_volume', 'Edited Volume')], help_text='A monograph is a work authored, in its entirety, by one or more authors. An edited volume has different authors for each chapter.', max_length=50, null=True)),
                ('status', models.CharField(choices=[('submission', 'Submission'), ('revisions_required', 'Revisions Required'), ('revisions_submitted', 'Revisions Submitted'), ('accepted', 'Accepted'), ('declined', 'Declined')], default='submission', max_length=20)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_proposal_Form', to='core.ProposalForm')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_proposal_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IncompleteProposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Book Title')),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True)),
                ('author', models.CharField(blank=True, max_length=255, null=True, verbose_name='Submitting author/editor')),
                ('data', models.TextField(blank=True, null=True)),
                ('book_type', models.CharField(blank=True, choices=[('monograph', 'Monograph'), ('edited_volume', 'Edited Volume')], help_text='A monograph is a work authored, in its entirety, by one or more authors. An edited volume has different authors for each chapter.', max_length=50, null=True)),
                ('status', models.CharField(blank=True, choices=[('submission', 'Submission'), ('revisions_required', 'Revisions Required'), ('revisions_submitted', 'Revisions Submitted'), ('accepted', 'Accepted'), ('declined', 'Declined')], default='submission', max_length=20, null=True)),
                ('form', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.ProposalForm')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Book Title')),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True)),
                ('author', models.CharField(max_length=255, verbose_name='Submitting author/editor')),
                ('date_submitted', models.DateTimeField(auto_now_add=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('date_review_started', models.DateTimeField(blank=True, null=True)),
                ('revision_due_date', models.DateTimeField(blank=True, null=True)),
                ('date_accepted', models.DateTimeField(blank=True, null=True)),
                ('book_type', models.CharField(blank=True, choices=[('monograph', 'Monograph'), ('edited_volume', 'Edited Volume')], help_text='A monograph is a work authored, in its entirety, by one or more authors. An edited volume has different authors for each chapter.', max_length=50, null=True)),
                ('current_version', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[('submission', 'Submission'), ('revisions_required', 'Revisions Required'), ('revisions_submitted', 'Revisions Submitted'), ('accepted', 'Accepted'), ('declined', 'Declined')], default='submission', max_length=20)),
                ('book_editors', models.ManyToManyField(blank=True, null=True, related_name='proposal_book_editors', to=settings.AUTH_USER_MODEL)),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contract_of_proposal', to='core.Contract')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ProposalForm')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('requestor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='editor_requestor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProposalNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_submitted', models.DateTimeField(auto_now_add=True)),
                ('date_last_updated', models.DateTimeField(auto_now=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='submission.Proposal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProposalReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned', models.DateField(auto_now_add=True)),
                ('accepted', models.DateField(blank=True, null=True)),
                ('declined', models.DateField(blank=True, null=True)),
                ('due', models.DateField(blank=True, null=True)),
                ('completed', models.DateField(blank=True, null=True)),
                ('recommendation', models.CharField(blank=True, choices=[('accept', 'Accept'), ('reject', 'Reject'), ('revisions', 'Revisions Required')], max_length=10, null=True)),
                ('competing_interests', models.TextField(blank=True, help_text="If any of the authors or editors have any competing interests please add them here. e.g.. 'This study was paid for by corp xyz.'", null=True)),
                ('blind', models.NullBooleanField(default=False)),
                ('access_key', models.CharField(blank=True, max_length=200, null=True)),
                ('hide', models.BooleanField(default=False)),
                ('comments_from_editor', models.TextField(blank=True, null=True)),
                ('reopened', models.BooleanField(default=False)),
                ('withdrawn', models.BooleanField(default=False)),
                ('files', models.ManyToManyField(blank=True, null=True, to='core.File')),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='submission.Proposal')),
                ('requestor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='review_requestor', to=settings.AUTH_USER_MODEL)),
                ('results', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='review.FormResult')),
                ('review_form', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='review.Form')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionChecklistItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=100)),
                ('text', models.CharField(max_length=500)),
                ('sequence', models.IntegerField(default=999)),
                ('required', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('sequence', 'text'),
            },
        ),
        migrations.AddField(
            model_name='proposal',
            name='review_assignments',
            field=models.ManyToManyField(blank=True, null=True, related_name='review', to='submission.ProposalReview'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='review_form',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='review.Form'),
        ),
        migrations.AddField(
            model_name='historyproposal',
            name='proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_proposal', to='submission.Proposal'),
        ),
        migrations.AddField(
            model_name='historyproposal',
            name='requestor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_proposal_Requestor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historyproposal',
            name='review_form',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='review.Form'),
        ),
        migrations.AddField(
            model_name='historyproposal',
            name='user_edited',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='edited_by_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='proposalreview',
            unique_together={('proposal', 'user')},
        ),
    ]
